package th.ac.ku.kps.eng.cpe.controller;

import java.io.*;
import java.util.ArrayList;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import com.fasterxml.jackson.databind.ObjectMapper;

import th.ac.ku.kps.eng.cpe.dao.CustomerDAO;
import th.ac.ku.kps.eng.cpe.entity.Customer;
import th.ac.ku.kps.eng.cpe.entity.Person;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;

public class CustomerServlet extends HttpServlet {

	@Override
	protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {

		resp.setCharacterEncoding("UTF-8");
		PrintWriter out = resp.getWriter();
		resp.setContentType("application/json");
		ArrayList<Customer> listOfCustomers = CustomerDAO.getAllCustomers();

		ByteArrayOutputStream op = new ByteArrayOutputStream();
		ObjectMapper mapper = new ObjectMapper();
		mapper.writeValue(op, listOfCustomers);

		System.out.println("Request Body:\n" + getBody(req));
		
		byte[] data = op.toByteArray();
		out.write(new String(data).toString());

	}

	@Override
	protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {
		resp.setCharacterEncoding("UTF-8");
		PrintWriter writer = resp.getWriter();
		resp.setContentType("application/json");

		String body = getBody(req);
		System.out.println("Request Body:\n" + body);

		try {
			ObjectMapper obj = new ObjectMapper();
//			Person p = obj.readValue(body, Person.class);
//			writer.write(obj.writeValueAsString(p));

			Customer newCustomer = obj.readValue(body, Customer.class);
			ArrayList<Customer> listOfCustomers = CustomerDAO.getAllCustomers();
			listOfCustomers.add(newCustomer);
			// Send a success response
			writer.write(obj.writeValueAsString(listOfCustomers));

		} catch (Exception e) {
			writer.write(e.getMessage());
		}
	}
	protected void doPatch(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {
	    resp.setCharacterEncoding("UTF-8");
	    PrintWriter writer = resp.getWriter();
	    resp.setContentType("application/json");

	    String body = getBody(req);
	    System.out.println("Request Body:\n" + body);

	    try {
	        ObjectMapper obj = new ObjectMapper();

	        // Assuming you have a method in CustomerDAO to apply partial updates to a customer
	        Customer patchedCustomer = obj.readValue(body, Customer.class);
	        boolean success = CustomerDAO.patchCustomer(patchedCustomer);

	        if (success) {
	            // If the patch is successful, send a success response
	            writer.write("{\"success\": true}");
	        } else {
	            // If the patch fails, send an appropriate error response
	            writer.write("{\"success\": false, \"error\": \"Failed to patch the customer\"}");
	        }

	    } catch (Exception e) {
	        writer.write("{\"success\": false, \"error\": \"" + e.getMessage() + "\"}");
	    }
	}


	@Override
	protected void doPut(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {
		resp.setCharacterEncoding("UTF-8");
		PrintWriter writer = resp.getWriter();
		resp.setContentType("application/json");

		String body = getBody(req);
		System.out.println("Request Body:\n" + body);

		try {
			ObjectMapper obj = new ObjectMapper();
			Customer updatedCustomer = obj.readValue(body, Customer.class);
			boolean success = CustomerDAO.updateCustomer(updatedCustomer);
			if (success) {
				// If the update is successful, send a success response
				writer.write("{\"success\": true}");
			} else {
				// If the update fails, send an appropriate error response
				writer.write("{\"success\": false, \"error\": \"Failed to update the customer\"}");
			}

		} catch (Exception e) {
			writer.write("{\"success\": false, \"error\": \"" + e.getMessage() + "\"}");
		}
	}

	@Override
	protected void doDelete(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {
		resp.setCharacterEncoding("UTF-8");
		PrintWriter writer = resp.getWriter();
		resp.setContentType("application/json");

		String body = getBody(req);
		System.out.println("Request Body:\n" + body);

		try {
			ObjectMapper obj = new ObjectMapper();
			Customer customerToDelete = obj.readValue(body, Customer.class);
			boolean success = CustomerDAO.deleteCustomer(customerToDelete);
			if (success) {
				// If the deletion is successful, send a success response
				writer.write("{\"success\": true}");
			} else {
				// If the deletion fails, send an appropriate error response
				writer.write("{\"success\": false, \"error\": \"Failed to delete the customer\"}");
			}

		} catch (Exception e) {
			writer.write("{\"success\": false, \"error\": \"" + e.getMessage() + "\"}");
		}
	}

	public static String getBody(HttpServletRequest request) throws IOException {

		String body = null;
		StringBuilder stringBuilder = new StringBuilder();
		BufferedReader bufferedReader = null;

		try {
			InputStream inputStream = request.getInputStream();
			if (inputStream != null) {
				bufferedReader = new BufferedReader(new InputStreamReader(inputStream));
				char[] charBuffer = new char[128];
				int bytesRead = -1;
				while ((bytesRead = bufferedReader.read(charBuffer)) > 0) {
					stringBuilder.append(charBuffer, 0, bytesRead);
				}
			} else {
				stringBuilder.append("");
			}
		} catch (IOException ex) {
			throw ex;
		} finally {
			if (bufferedReader != null) {
				try {
					bufferedReader.close();
				} catch (IOException ex) {
					throw ex;
				}
			}
		}
		body = stringBuilder.toString();
		return body;
	}

}
